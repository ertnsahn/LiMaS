@{
    ViewData["Title"] = "Books";
}
@section styles{
    <link href="~/lib/datatables.net-bs/css/dataTables.bootstrap.css" rel="stylesheet" />
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            @ViewData["Title"]
            <small>Management</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="#">@ViewData["Title"]</a></li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title">@ViewData["Title"]</h3>
                        <a type="button" href="@Url.Action("Create","Books")" class="btn btn-primary btn-rounded waves-effect waves-light mb-2 mr-2" style="float: right;"><i class="mdi mdi-plus mr-1"></i>Create new book</a>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <table id="BooksTable" class="table table-bordered table-striped">
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->

@section Scripts{
    <script src="~/lib/datatables.net/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script>
        $(document).ready(function () {
            var booksTable = "";
            booksTable = $("#BooksTable").DataTable({
                "responsive": true,
                "serverSide": true,
                "processing": true,
                "paging": true,
                "ajax": {
                    "url": "/Books/Index",
                    "type": "POST",
                    "contentType": 'application/json',
                    "data": function (d) {
                        d.SearchTerm = $('.dataTables_filter input').val();
                        d.Page = (booksTable === "" ? 0 : booksTable.page.info().page) + 1;
                        d.RowsPerPage = booksTable === "" ? 10 : booksTable.page.info().length;
                        d.SortByColumn = booksTable === "" ? 2 : booksTable.order()[0][0];
                        d.SortDir = booksTable === "" ? "ASC" : booksTable.order()[0][1].toUpperCase();
                        return JSON.stringify(d);
                    },
                },
                "columns": [
                    {
                        "title": "Id", "data": "id",
                        "visible": false
                    },
                    {
                        "title": "Book Title", "data": "bookTitle"
                    },
                    {
                        "title": "ISBN", "data": "isbn"
                    },
                    {
                        "title": "Publish Year", "data": "publishYear"
                    },
                    {
                        "title": "Cover Price", "data": "coverPrice"
                    },
                    {
                        "title": "Status", "data": "status",
                        "render": function (data, type, row) {
                            if (data === null || data === "" || typeof data === "undefined") {
                                return '<span class="label label-success">Available</span>';
                            } else {
                                return '<span class="label label-info">' + data + '</span>';
                            }
                        }
                    },

                    {
                        "title": "Actions",
                        "sortable": false,
                        "width": "250px",
                        "render": function (data, type, row) {
                            if (row.status === null || row.status === "" || typeof row.status === "undefined") {
                                return '<a href="/books/edit/' + row.id +'" class="btn btn-success editBtn" Title="Edit" data-ID=' + row.id + '><i class="fa fa-edit"></i></a>' +
                                    ' <a class="btn btn-danger  deleteBtn" Title="Delete" data-ID=' + row.id + ' href="#"><i class="fa fa-trash"></i></a>' +
                                    ' <a class="btn btn-info  CheckOut"  data-ID=' + row.id + ' href="/books/checkout/' + row.id + '">Check Out</a>' +
                                    ' <a class="btn btn-primary  CheckIn"  data-ID=' + row.id + ' href="/books/history/' + row.id + '">History</a>';
                            } else {
                                return '<a href="#" class="btn btn-success editBtn" Title="Edit" data-ID=' + row.id + '><i class="fa fa-edit"></i></a>' +
                                    ' <a class="btn btn-danger  deleteBtn" Title="Delete" data-ID=' + row.id + ' href="#"><i class="fa fa-trash"></i></a>' +
                                    ' <a class="btn btn-primary  CheckIn"  data-ID=' + row.id + ' href="/books/checkin/' + row.id + '">Check In</a>' +
                                    ' <a class="btn btn-primary  CheckIn"  data-ID=' + row.id + ' href="/books/details/' + row.id + '">Details</a>' +
                                    ' <a class="btn btn-primary  CheckIn"  data-ID=' + row.id + ' href="/books/history/' + row.id + '">History</a>';
                            }
                        }
                    }
                ]
            });

            booksTable.on("click", ".deleteBtn", function (evt) {
                evt.preventDefault();
                var Id = $(this).attr("data-ID");
                swal({
                    title: '',
                    text: "Want To Delete",
                    icon: 'warning',
                    dangerMode: true,
                    buttons: {
                        confirm: "Delete",
                        cancel: "Cancel"
                    }
                }).then(function (willDelete) {
                    if (willDelete) {
                        $.ajax({
                            "url": "/books/delete/" + Id,
                            "type": "POST",
                            success: function (response) {
                                if (response) {
                                    swal("Deleted Sucessfully", {
                                        icon: "info"
                                    }).then((val) => {
                                        booksTable.draw();
                                    });
                                }
                                else {
                                    swal("Checkout book can't deleted!", {
                                        icon: "error"
                                    });
                                }
                            },
                            error: function (httpResult, err, status) {

                            }
                        });
                    }
                }, function (dismiss) {
                });
            });
        });
    </script>
}