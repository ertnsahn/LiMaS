#pragma checksum "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "be2fc71d76ca7c060cd914a1f41e63f69e0aa350"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\_ViewImports.cshtml"
using LMSWebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\_ViewImports.cshtml"
using LMSWebApp.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\_ViewImports.cshtml"
using LMSWebApp.Areas.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\_ViewImports.cshtml"
using LMSWebApp.Areas.Identity.Pages;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"be2fc71d76ca7c060cd914a1f41e63f69e0aa350", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4b95f97fc6e7b0b1baaddc9989dfd1417e27b352", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap-daterangepicker/daterangepicker.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap-daterangepicker/daterangepicker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Dashboard";

    var previousYearDate = DateTime.Now.AddDays(-30);

#line default
#line hidden
#nullable disable
            DefineSection("styles", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "be2fc71d76ca7c060cd914a1f41e63f69e0aa3504868", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <style>\r\n        canvas {\r\n            -moz-user-select: none;\r\n            -webkit-user-select: none;\r\n            -ms-user-select: none;\r\n        }\r\n    </style>\r\n");
            }
            );
            WriteLiteral(@"<!-- Content Wrapper. Contains page content -->
<div class=""content-wrapper"">
    <!-- Content Header (Page header) -->
    <section class=""content-header"">
        <h1>
            Dashboard
            <small>Version 1.0</small>
        </h1>
        <ol class=""breadcrumb"">
            <li><a href=""#""><i class=""fa fa-dashboard""></i> Home</a></li>
            <li class=""active"">Dashboard</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class=""content"">
        <!-- Info boxes -->
        <div class=""row"">
            <div class=""col-md-3 col-sm-6 col-xs-12"">
                <div class=""info-box"">
                    <span class=""info-box-icon bg-aqua""><i class=""ion ion-ios-book""></i></span>

                    <div class=""info-box-content"">
                        <span class=""info-box-text"">Total Books</span>
                        <span class=""info-box-number"">");
#nullable restore
#line 41 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\Home\Index.cshtml"
                                                 Write(ViewBag.TotalBooks);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span>
                    </div>
                    <!-- /.info-box-content -->
                </div>
                <!-- /.info-box -->
            </div>
            <!-- /.col -->
            <div class=""col-md-3 col-sm-6 col-xs-12"">
                <div class=""info-box"">
                    <span class=""info-box-icon bg-green""><i class=""ion ion-ios-book""></i></span>

                    <div class=""info-box-content"">
                        <span class=""info-box-text"">Total Checkouts</span>
                        <span class=""info-box-number"">");
#nullable restore
#line 54 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\Home\Index.cshtml"
                                                 Write(ViewBag.TotalCheckoutBooks);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span>
                    </div>
                    <!-- /.info-box-content -->
                </div>
                <!-- /.info-box -->
            </div>
            <!-- /.col -->
            <!-- fix for small devices only -->
            <div class=""clearfix visible-sm-block""></div>

            <div class=""col-md-3 col-sm-6 col-xs-12"">
                <div class=""info-box"">
                    <span class=""info-box-icon bg-red""><i class=""ion ion-ios-book""></i></span>

                    <div class=""info-box-content"">
                        <span class=""info-box-text"">Total Due</span>
                        <span class=""info-box-number"">");
#nullable restore
#line 70 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\Home\Index.cshtml"
                                                 Write(ViewBag.TotalLateBooks);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span>
                    </div>
                    <!-- /.info-box-content -->
                </div>
                <!-- /.info-box -->
            </div>
            <!-- /.col -->

            <div class=""col-md-3 col-sm-6 col-xs-12"">
                <div class=""info-box"">
                    <span class=""info-box-icon bg-red""><i class=""fa fa-dollar""></i></span>

                    <div class=""info-box-content"">
                        <span class=""info-box-text"">Total Penality</span>
                        <span class=""info-box-number"">");
#nullable restore
#line 84 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\Home\Index.cshtml"
                                                 Write(ViewBag.TotalPenality);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span>
                    </div>
                    <!-- /.info-box-content -->
                </div>
                <!-- /.info-box -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->

        <div class=""row"">
            <div class=""col-md-12"">
                <div class=""box"">
                    <div class=""box-header with-border"">
                        <h3 class=""box-title"">Statistics</h3>
                        <div class=""box-tools pull-right"">
                            <div class=""col-md-6""></div>
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <div class=""input-group"">
                                        <div class=""input-group-addon"">
                                            <i class=""fa fa-calendar""></i>
                                        </div>
                                        <input type=""text"" class=""form-control ");
            WriteLiteral(@"pull-right"" id=""reservation"">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class=""box-body"">
                        <div class=""row"">
                            <div class=""col-md-12"">
                                <p class=""text-center"">
                                    <strong id=""StatsDates"">Statistics:");
#nullable restore
#line 118 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\Home\Index.cshtml"
                                                                  Write(previousYearDate.ToString("D"));

#line default
#line hidden
#nullable disable
            WriteLiteral(" - ");
#nullable restore
#line 118 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\Home\Index.cshtml"
                                                                                                    Write(DateTime.Now.ToString("D"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</strong>
                                </p>
                                <div class=""chart"">
                                    <!-- Sales Chart Canvas -->
                                    <canvas id=""salesChart"" style=""height:380px;""></canvas>
                                </div>
                                <!-- /.chart-responsive -->
                            </div>
                            <!-- /.col -->
                        </div>
                        <!-- /.row -->
                    </div>
                    <!-- ./box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </section>
    <!-- /.content -->
</div>

<!-- /.content-wrapper -->

");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "be2fc71d76ca7c060cd914a1f41e63f69e0aa35013287", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>
        $(document).ready(function () {
            function getCheckInOutStats(start, end) {
                $.ajax({
                    url: ""/Home/GetChartData?start="" + start +""&end="" + end,
                    contentType: ""application/json"",
                    dataType: 'json',
                    success: function (result) {
                        var requestReceivedData = [];
                        $.each(result.listCheckOutData,
                            function (key, obj) {
                                requestReceivedData.push(obj.dataCount);
                            });

                        var requestCompletedData = [];
                        $.each(result.listCheckinData,
                            function (key, obj) {
                                requestCompletedData.push(obj.dataCount);
                            });

                        $(""#StatsDates"").text(result.statsDates);

                        var areaChartData = {};
  ");
                WriteLiteral(@"                      if (requestReceivedData.length > 0 && requestCompletedData.length > 0) {
                            areaChartData = {
                                labels: result.monthNames,
                                datasets: [
                                    {
                                        label: 'Check in',
                                        fillColor: '#00a65a ',
                                        strokeColor: '#00a65a',
                                        pointColor: '#00a65a',
                                        pointStrokeColor: '#00a65a',
                                        pointHighlightFill: '#00a65a',
                                        pointHighlightStroke: '#00a65a',
                                        data: requestReceivedData
                                    },
                                    {
                                        label: 'Check out',
                                        fillColor: '#00c0ef '");
                WriteLiteral(@",
                                        strokeColor: '#00c0ef',
                                        pointColor: '#00c0ef',
                                        pointStrokeColor: '#00c0ef',
                                        pointHighlightFill: '#00c0ef',
                                        pointHighlightStroke: '#00c0ef',
                                        data: requestCompletedData
                                    }
                                ]
                            }
                        }
                        else if (requestReceivedData.length > 0 && requestCompletedData.length <= 0) {
                            areaChartData = {
                                labels: result.monthNames,
                                datasets: [
                                    {
                                        label: 'Check in ',
                                        fillColor: '#00a65a ',
                                        strokeColor: '#0");
                WriteLiteral(@"0a65a',
                                        pointColor: '#00a65a',
                                        pointStrokeColor: '#00a65a',
                                        pointHighlightFill: '#00a65a',
                                        pointHighlightStroke: '#00a65a',
                                        data: requestReceivedData
                                    }
                                ]
                            }
                        }

                        else if (requestReceivedData.length <= 0 && requestCompletedData.length > 0) {
                            areaChartData = {
                                labels: result.monthNames,
                                datasets: [
                                    {
                                        label: 'Check out',
                                        fillColor: '#00c0ef ',
                                        strokeColor: '#00c0ef',
                                        pointColo");
                WriteLiteral(@"r: '#00c0ef',
                                        pointStrokeColor: '#00c0ef',
                                        pointHighlightFill: '#00c0ef',
                                        pointHighlightStroke: '#00c0ef',
                                        data: requestCompletedData
                                    }
                                ]
                            }
                        }

                        //-------------
                        //- BAR CHART -
                        //-------------
                        var barChartCanvas = $('#salesChart').get(0).getContext('2d');
                        var barChart = new Chart(barChartCanvas);
                        var barChartData = areaChartData;

                        var barChartOptions = {
                            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
                            scaleBeginAtZero: true,
                 ");
                WriteLiteral(@"           //Boolean - Whether grid lines are shown across the chart
                            scaleShowGridLines: true,
                            //String - Colour of the grid lines
                            scaleGridLineColor: 'rgba(0,0,0,.05)',
                            //Number - Width of the grid lines
                            scaleGridLineWidth: 1,
                            //Boolean - Whether to show horizontal lines (except X axis)
                            scaleShowHorizontalLines: true,
                            //Boolean - Whether to show vertical lines (except Y axis)
                            scaleShowVerticalLines: true,
                            //Boolean - If there is a stroke on each bar
                            barShowStroke: true,
                            //Number - Pixel width of the bar stroke
                            barStrokeWidth: 2,
                            //Number - Spacing between each of the X value sets
                            b");
                WriteLiteral(@"arValueSpacing: 5,
                            //Number - Spacing between data sets within X values
                            barDatasetSpacing: 1,
                            //String - A legend template
                            legendTemplate:
                                '<ul class=""<%=name.toLowerCase()%>-legend""><% for (var i=0; i<datasets.length; i++){%><li><span style=""background-color:<%=datasets[i].fillColor%>""></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
                            //Boolean - whether to make the chart responsive
                            responsive: true,
                            maintainAspectRatio: true
                        }

                        barChartOptions.datasetFill = false;
                        barChart.Bar(barChartData, barChartOptions);
                    },
                    error: function (err) {
                    }
                });
            }
            $('#reservation').daterange");
                WriteLiteral("picker({\r\n                \"startDate\": \"");
#nullable restore
#line 275 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\Home\Index.cshtml"
                         Write(previousYearDate.ToString("dd/MM/yyyy"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\",\r\n                \"endDate\": \"");
#nullable restore
#line 276 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\Home\Index.cshtml"
                       Write(DateTime.Now.ToString("dd/MM/yyyy"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\"\r\n            }, function (start, end, label) {\r\n                start = start.format(\'DD/MM/YYYY\');\r\n                end = end.format(\'DD/MM/YYYY\');\r\n                getCheckInOutStats(start, end);\r\n            });\r\n            getCheckInOutStats(\"");
#nullable restore
#line 282 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\Home\Index.cshtml"
                           Write(previousYearDate.ToString("dd/MM/yyyy"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\",\"");
#nullable restore
#line 282 "C:\Users\BYES\Documents\GitHub\LMS\LMSWebApp\Views\Home\Index.cshtml"
                                                                      Write(DateTime.Now.ToString("dd/MM/yyyy"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\");\r\n        });\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
